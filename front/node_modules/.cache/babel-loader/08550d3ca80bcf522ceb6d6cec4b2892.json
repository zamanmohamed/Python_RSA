{"ast":null,"code":"var _ = require('../utils')._;\n\nvar utils = require('../utils');\n\nmodule.exports = {\n  privateExport: function (key, options) {\n    return {\n      n: key.n.toBuffer(),\n      e: key.e,\n      d: key.d.toBuffer(),\n      p: key.p.toBuffer(),\n      q: key.q.toBuffer(),\n      dmp1: key.dmp1.toBuffer(),\n      dmq1: key.dmq1.toBuffer(),\n      coeff: key.coeff.toBuffer()\n    };\n  },\n  privateImport: function (key, data, options) {\n    if (data.n && data.e && data.d && data.p && data.q && data.dmp1 && data.dmq1 && data.coeff) {\n      key.setPrivate(data.n, data.e, data.d, data.p, data.q, data.dmp1, data.dmq1, data.coeff);\n    } else {\n      throw Error(\"Invalid key data\");\n    }\n  },\n  publicExport: function (key, options) {\n    return {\n      n: key.n.toBuffer(),\n      e: key.e\n    };\n  },\n  publicImport: function (key, data, options) {\n    if (data.n && data.e) {\n      key.setPublic(data.n, data.e);\n    } else {\n      throw Error(\"Invalid key data\");\n    }\n  },\n\n  /**\r\n   * Trying autodetect and import key\r\n   * @param key\r\n   * @param data\r\n   */\n  autoImport: function (key, data) {\n    if (data.n && data.e) {\n      if (data.d && data.p && data.q && data.dmp1 && data.dmq1 && data.coeff) {\n        module.exports.privateImport(key, data);\n        return true;\n      } else {\n        module.exports.publicImport(key, data);\n        return true;\n      }\n    }\n\n    return false;\n  }\n};","map":{"version":3,"sources":["C:/Users/Zaman/zaman/RSA/front/node_modules/node-rsa/src/formats/components.js"],"names":["_","require","utils","module","exports","privateExport","key","options","n","toBuffer","e","d","p","q","dmp1","dmq1","coeff","privateImport","data","setPrivate","Error","publicExport","publicImport","setPublic","autoImport"],"mappings":"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","sourcesContent":["var _ = require('../utils')._;\r\nvar utils = require('../utils');\r\n\r\nmodule.exports = {\r\n    privateExport: function (key, options) {\r\n        return {\r\n            n: key.n.toBuffer(),\r\n            e: key.e,\r\n            d: key.d.toBuffer(),\r\n            p: key.p.toBuffer(),\r\n            q: key.q.toBuffer(),\r\n            dmp1: key.dmp1.toBuffer(),\r\n            dmq1: key.dmq1.toBuffer(),\r\n            coeff: key.coeff.toBuffer()\r\n        };\r\n    },\r\n\r\n    privateImport: function (key, data, options) {\r\n        if (data.n && data.e && data.d && data.p && data.q && data.dmp1 && data.dmq1 && data.coeff) {\r\n            key.setPrivate(\r\n                data.n,\r\n                data.e,\r\n                data.d,\r\n                data.p,\r\n                data.q,\r\n                data.dmp1,\r\n                data.dmq1,\r\n                data.coeff\r\n            );\r\n        } else {\r\n            throw Error(\"Invalid key data\");\r\n        }\r\n    },\r\n\r\n    publicExport: function (key, options) {\r\n        return {\r\n            n: key.n.toBuffer(),\r\n            e: key.e\r\n        };\r\n    },\r\n\r\n    publicImport: function (key, data, options) {\r\n        if (data.n && data.e) {\r\n            key.setPublic(\r\n                data.n,\r\n                data.e\r\n            );\r\n        } else {\r\n            throw Error(\"Invalid key data\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Trying autodetect and import key\r\n     * @param key\r\n     * @param data\r\n     */\r\n    autoImport: function (key, data) {\r\n        if (data.n && data.e) {\r\n            if (data.d && data.p && data.q && data.dmp1 && data.dmq1 && data.coeff) {\r\n                module.exports.privateImport(key, data);\r\n                return true;\r\n            } else {\r\n                module.exports.publicImport(key, data);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}