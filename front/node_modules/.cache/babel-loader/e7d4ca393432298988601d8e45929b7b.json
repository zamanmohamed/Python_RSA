{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zaman\\\\zaman\\\\RSA\\\\front\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport NodeRSA from \"node-rsa\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [pubkey1, setpubkey1] = useState({});\n  const key = NodeRSA({\n    b: 1024\n  });\n  let public_key = key.exportKey(\"public\");\n  let private_key = key.exportKey(\"private\");\n  console.log(public_key);\n  console.log(private_key);\n\n  function genarate() {\n    localStorage.setItem(\"public\", public_key);\n    localStorage.setItem(\"private\", private_key);\n    window.location.reload();\n  }\n\n  function removeKey() {\n    localStorage.removeItem(\"public\");\n    localStorage.removeItem(\"private\");\n    window.location.reload();\n  }\n\n  function encrpyt() {\n    let key_private = new NodeRSA(localStorage.getItem(\"private\"));\n    let key_public = new NodeRSA(localStorage.getItem(\"public\"));\n\n    const sendRequest = async () => {\n      const {\n        data\n      } = await axios.get(\"http://localhost:5000/getpublic1\");\n      setpubkey1(data.hi);\n    };\n\n    sendRequest();\n    console.log(pubkey1); // let encrpytString = key_public.encrypt(\"shaman\", \"base64\");\n    //console.log(encrpytString);\n    //let decryptString = key_private.decrypt(encrpytString, \"utf8\");\n    //console.log(decryptString);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello world \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: localStorage.getItem(\"public\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: localStorage.getItem(\"private\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: genarate,\n        children: \"Genarate key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: removeKey,\n        children: \"Remove Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: encrpyt,\n        children: \"Encrpyt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LiTru41VtN58kcggv5OotcH+rf8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Zaman/zaman/RSA/front/src/App.js"],"names":["React","useState","NodeRSA","axios","App","pubkey1","setpubkey1","key","b","public_key","exportKey","private_key","console","log","genarate","localStorage","setItem","window","location","reload","removeKey","removeItem","encrpyt","key_private","getItem","key_public","sendRequest","data","get","hi"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMM,GAAG,GAAGL,OAAO,CAAC;AAAEM,IAAAA,CAAC,EAAE;AAAL,GAAD,CAAnB;AACA,MAAIC,UAAU,GAAGF,GAAG,CAACG,SAAJ,CAAc,QAAd,CAAjB;AACA,MAAIC,WAAW,GAAGJ,GAAG,CAACG,SAAJ,CAAc,SAAd,CAAlB;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;;AAEA,WAASG,QAAT,GAAoB;AAClBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BP,UAA/B;AACAM,IAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCL,WAAhC;AACAM,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;;AAED,WAASC,SAAT,GAAqB;AACnBL,IAAAA,YAAY,CAACM,UAAb,CAAwB,QAAxB;AACAN,IAAAA,YAAY,CAACM,UAAb,CAAwB,SAAxB;AACAJ,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;;AAED,WAASG,OAAT,GAAmB;AACjB,QAAIC,WAAW,GAAG,IAAIrB,OAAJ,CAAYa,YAAY,CAACS,OAAb,CAAqB,SAArB,CAAZ,CAAlB;AACA,QAAIC,UAAU,GAAG,IAAIvB,OAAJ,CAAYa,YAAY,CAACS,OAAb,CAAqB,QAArB,CAAZ,CAAjB;;AAEA,UAAME,WAAW,GAAG,YAAY;AAC9B,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMxB,KAAK,CAACyB,GAAN,CAAU,kCAAV,CAAvB;AACAtB,MAAAA,UAAU,CAACqB,IAAI,CAACE,EAAN,CAAV;AACD,KAHD;;AAIAH,IAAAA,WAAW;AAEXd,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ,EAViB,CAWjB;AACA;AAEA;AACA;AACD;;AAED,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAA,kBAAIU,YAAY,CAACS,OAAb,CAAqB,QAArB;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAA,kBAAIT,YAAY,CAACS,OAAb,CAAqB,SAArB;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEV,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEM,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAzDQlB,G;;KAAAA,G;AA2DT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport NodeRSA from \"node-rsa\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [pubkey1, setpubkey1] = useState({});\n  const key = NodeRSA({ b: 1024 });\n  let public_key = key.exportKey(\"public\");\n  let private_key = key.exportKey(\"private\");\n\n  console.log(public_key);\n  console.log(private_key);\n\n  function genarate() {\n    localStorage.setItem(\"public\", public_key);\n    localStorage.setItem(\"private\", private_key);\n    window.location.reload();\n  }\n\n  function removeKey() {\n    localStorage.removeItem(\"public\");\n    localStorage.removeItem(\"private\");\n    window.location.reload();\n  }\n\n  function encrpyt() {\n    let key_private = new NodeRSA(localStorage.getItem(\"private\"));\n    let key_public = new NodeRSA(localStorage.getItem(\"public\"));\n\n    const sendRequest = async () => {\n      const { data } = await axios.get(\"http://localhost:5000/getpublic1\");\n      setpubkey1(data.hi);\n    };\n    sendRequest();\n\n    console.log(pubkey1);\n    // let encrpytString = key_public.encrypt(\"shaman\", \"base64\");\n    //console.log(encrpytString);\n\n    //let decryptString = key_private.decrypt(encrpytString, \"utf8\");\n    //console.log(decryptString);\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"App\">\n        <h1>Hello world </h1>\n      </div>\n      <div className=\"App\">\n        <p>{localStorage.getItem(\"public\")}</p>\n      </div>\n      <div className=\"App\">\n        <p>{localStorage.getItem(\"private\")}</p>\n      </div>\n      <div className=\"App\">\n        <button onClick={genarate}>Genarate key</button>\n        <button onClick={removeKey}>Remove Key</button>\n        <button onClick={encrpyt}>Encrpyt</button>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}